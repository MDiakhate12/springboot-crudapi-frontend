[{"C:\\Users\\odiak\\Documents\\PROJETS\\crud-api-spring-boot\\frontend\\src\\index.js":"1","C:\\Users\\odiak\\Documents\\PROJETS\\crud-api-spring-boot\\frontend\\src\\App.js":"2","C:\\Users\\odiak\\Documents\\PROJETS\\crud-api-spring-boot\\frontend\\src\\reportWebVitals.js":"3","C:\\Users\\odiak\\Documents\\PROJETS\\crud-api-spring-boot\\frontend\\src\\services\\AgenceService.js":"4","C:\\Users\\odiak\\Documents\\PROJETS\\crud-api-spring-boot\\frontend\\src\\utils\\Axios.js":"5","C:\\Users\\odiak\\Documents\\PROJETS\\crud-api-spring-boot\\frontend\\src\\components\\agence\\AgenceTable.js":"6","C:\\Users\\odiak\\Documents\\PROJETS\\crud-api-spring-boot\\frontend\\src\\components\\common\\MiniDrawer.js":"7","C:\\Users\\odiak\\Documents\\PROJETS\\crud-api-spring-boot\\frontend\\src\\components\\common\\ConfirmationDialog.js":"8","C:\\Users\\odiak\\Documents\\PROJETS\\crud-api-spring-boot\\frontend\\src\\components\\common\\AddButtonAnimated.js":"9","C:\\Users\\odiak\\Documents\\PROJETS\\crud-api-spring-boot\\frontend\\src\\components\\common\\SuccessSnackbar.js":"10","C:\\Users\\odiak\\Documents\\PROJETS\\crud-api-spring-boot\\frontend\\src\\components\\agence\\AgenceFormDialog.js":"11","C:\\Users\\odiak\\Documents\\PROJETS\\crud-api-spring-boot\\frontend\\src\\components\\agence\\AgenceRow.js":"12","C:\\Users\\odiak\\Documents\\PROJETS\\crud-api-spring-boot\\frontend\\src\\contexts\\GlobalState.js":"13","C:\\Users\\odiak\\Documents\\PROJETS\\crud-api-spring-boot\\frontend\\src\\contexts\\AgenceReducer.js":"14","C:\\Users\\odiak\\Documents\\PROJETS\\crud-api-spring-boot\\frontend\\src\\components\\agence\\Agence.js":"15","C:\\Users\\odiak\\Documents\\PROJETS\\crud-api-spring-boot\\frontend\\src\\contexts\\ClientReducer.js":"16","C:\\Users\\odiak\\Documents\\PROJETS\\crud-api-spring-boot\\frontend\\src\\services\\ClientService.js":"17","C:\\Users\\odiak\\Documents\\PROJETS\\crud-api-spring-boot\\frontend\\src\\components\\clients\\Client.js":"18","C:\\Users\\odiak\\Documents\\PROJETS\\crud-api-spring-boot\\frontend\\src\\components\\clients\\ClientTable.js":"19","C:\\Users\\odiak\\Documents\\PROJETS\\crud-api-spring-boot\\frontend\\src\\components\\clients\\ClientFormDialog.js":"20","C:\\Users\\odiak\\Documents\\PROJETS\\crud-api-spring-boot\\frontend\\src\\components\\clients\\ClientRow.js":"21","C:\\Users\\odiak\\Documents\\PROJETS\\crud-api-spring-boot\\frontend\\src\\components\\common\\DatePickerDialog.js":"22","C:\\Users\\odiak\\Documents\\PROJETS\\crud-api-spring-boot\\frontend\\src\\components\\common\\VerticalTabs.js":"23","C:\\Users\\odiak\\Documents\\PROJETS\\crud-api-spring-boot\\frontend\\src\\components\\common\\Navbar.js":"24","C:\\Users\\odiak\\Documents\\PROJETS\\crud-api-spring-boot\\frontend\\src\\components\\common\\BottomNavbar.js":"25","C:\\Users\\odiak\\Documents\\PROJETS\\crud-api-spring-boot\\frontend\\src\\components\\compte\\Compte.js":"26","C:\\Users\\odiak\\Documents\\PROJETS\\crud-api-spring-boot\\frontend\\src\\components\\compte\\CompteTable.js":"27","C:\\Users\\odiak\\Documents\\PROJETS\\crud-api-spring-boot\\frontend\\src\\components\\compte\\CompteFormDialog.js":"28","C:\\Users\\odiak\\Documents\\PROJETS\\crud-api-spring-boot\\frontend\\src\\components\\compte\\CompteRow.js":"29","C:\\Users\\odiak\\Documents\\PROJETS\\crud-api-spring-boot\\frontend\\src\\contexts\\CompteReducer.js":"30","C:\\Users\\odiak\\Documents\\PROJETS\\crud-api-spring-boot\\frontend\\src\\services\\CompteService.js":"31","C:\\Users\\odiak\\Documents\\PROJETS\\crud-api-spring-boot\\frontend\\src\\components\\common\\FullScreenDialog.js":"32","C:\\Users\\odiak\\Documents\\PROJETS\\crud-api-spring-boot\\frontend\\src\\contexts\\AgenceState.js":"33","C:\\Users\\odiak\\Documents\\PROJETS\\crud-api-spring-boot\\frontend\\src\\contexts\\ClientState.js":"34","C:\\Users\\odiak\\Documents\\PROJETS\\crud-api-spring-boot\\frontend\\src\\contexts\\CompteState.js":"35","C:\\Users\\odiak\\Documents\\PROJETS\\crud-api-spring-boot\\frontend\\src\\contexts\\CommonReducers.js":"36"},{"size":500,"mtime":1609802434101,"results":"37","hashOfConfig":"38"},{"size":3252,"mtime":1613344377011,"results":"39","hashOfConfig":"38"},{"size":362,"mtime":499162500000,"results":"40","hashOfConfig":"38"},{"size":396,"mtime":1609612451432,"results":"41","hashOfConfig":"38"},{"size":170,"mtime":1609083373182,"results":"42","hashOfConfig":"38"},{"size":2560,"mtime":1613332464434,"results":"43","hashOfConfig":"38"},{"size":5969,"mtime":1609687917348,"results":"44","hashOfConfig":"38"},{"size":1297,"mtime":1609615588877,"results":"45","hashOfConfig":"38"},{"size":472,"mtime":1609101423781,"results":"46","hashOfConfig":"38"},{"size":990,"mtime":1609692201592,"results":"47","hashOfConfig":"38"},{"size":2097,"mtime":1609628119050,"results":"48","hashOfConfig":"38"},{"size":5417,"mtime":1613331393537,"results":"49","hashOfConfig":"38"},{"size":3277,"mtime":1613348554109,"results":"50","hashOfConfig":"38"},{"size":823,"mtime":1609630899517,"results":"51","hashOfConfig":"38"},{"size":1919,"mtime":1613329867780,"results":"52","hashOfConfig":"38"},{"size":893,"mtime":1609628667987,"results":"53","hashOfConfig":"38"},{"size":396,"mtime":1609805475374,"results":"54","hashOfConfig":"38"},{"size":1937,"mtime":1613332898863,"results":"55","hashOfConfig":"38"},{"size":2557,"mtime":1613332358108,"results":"56","hashOfConfig":"38"},{"size":3289,"mtime":1609803573069,"results":"57","hashOfConfig":"38"},{"size":5908,"mtime":1613331445201,"results":"58","hashOfConfig":"38"},{"size":890,"mtime":1609635723373,"results":"59","hashOfConfig":"38"},{"size":1201,"mtime":1609649187966,"results":"60","hashOfConfig":"38"},{"size":2053,"mtime":1609803240567,"results":"61","hashOfConfig":"38"},{"size":2222,"mtime":1610084314997,"results":"62","hashOfConfig":"38"},{"size":2435,"mtime":1613347480291,"results":"63","hashOfConfig":"38"},{"size":2603,"mtime":1613331971395,"results":"64","hashOfConfig":"38"},{"size":4173,"mtime":1613349011228,"results":"65","hashOfConfig":"38"},{"size":2530,"mtime":1613348319242,"results":"66","hashOfConfig":"38"},{"size":893,"mtime":1609805610887,"results":"67","hashOfConfig":"38"},{"size":677,"mtime":1610074726426,"results":"68","hashOfConfig":"38"},{"size":5896,"mtime":1610082703356,"results":"69","hashOfConfig":"38"},{"size":1832,"mtime":1613331361166,"results":"70","hashOfConfig":"38"},{"size":1825,"mtime":1613332753499,"results":"71","hashOfConfig":"38"},{"size":1894,"mtime":1613332524016,"results":"72","hashOfConfig":"38"},{"size":1907,"mtime":1613347971293,"results":"73","hashOfConfig":"38"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},"pc6c18",{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"76"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"76"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"76"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"76"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},"C:\\Users\\odiak\\Documents\\PROJETS\\crud-api-spring-boot\\frontend\\src\\index.js",[],["154","155"],"C:\\Users\\odiak\\Documents\\PROJETS\\crud-api-spring-boot\\frontend\\src\\App.js",[],"C:\\Users\\odiak\\Documents\\PROJETS\\crud-api-spring-boot\\frontend\\src\\reportWebVitals.js",[],"C:\\Users\\odiak\\Documents\\PROJETS\\crud-api-spring-boot\\frontend\\src\\services\\AgenceService.js",[],"C:\\Users\\odiak\\Documents\\PROJETS\\crud-api-spring-boot\\frontend\\src\\utils\\Axios.js",[],["156","157"],"C:\\Users\\odiak\\Documents\\PROJETS\\crud-api-spring-boot\\frontend\\src\\components\\agence\\AgenceTable.js",[],"C:\\Users\\odiak\\Documents\\PROJETS\\crud-api-spring-boot\\frontend\\src\\components\\common\\MiniDrawer.js",[],["158","159"],"C:\\Users\\odiak\\Documents\\PROJETS\\crud-api-spring-boot\\frontend\\src\\components\\common\\ConfirmationDialog.js",[],"C:\\Users\\odiak\\Documents\\PROJETS\\crud-api-spring-boot\\frontend\\src\\components\\common\\AddButtonAnimated.js",[],["160","161"],"C:\\Users\\odiak\\Documents\\PROJETS\\crud-api-spring-boot\\frontend\\src\\components\\common\\SuccessSnackbar.js",[],"C:\\Users\\odiak\\Documents\\PROJETS\\crud-api-spring-boot\\frontend\\src\\components\\agence\\AgenceFormDialog.js",[],"C:\\Users\\odiak\\Documents\\PROJETS\\crud-api-spring-boot\\frontend\\src\\components\\agence\\AgenceRow.js",[],"C:\\Users\\odiak\\Documents\\PROJETS\\crud-api-spring-boot\\frontend\\src\\contexts\\GlobalState.js",[],"C:\\Users\\odiak\\Documents\\PROJETS\\crud-api-spring-boot\\frontend\\src\\contexts\\AgenceReducer.js",[],"C:\\Users\\odiak\\Documents\\PROJETS\\crud-api-spring-boot\\frontend\\src\\components\\agence\\Agence.js",[],"C:\\Users\\odiak\\Documents\\PROJETS\\crud-api-spring-boot\\frontend\\src\\contexts\\ClientReducer.js",[],"C:\\Users\\odiak\\Documents\\PROJETS\\crud-api-spring-boot\\frontend\\src\\services\\ClientService.js",[],"C:\\Users\\odiak\\Documents\\PROJETS\\crud-api-spring-boot\\frontend\\src\\components\\clients\\Client.js",[],"C:\\Users\\odiak\\Documents\\PROJETS\\crud-api-spring-boot\\frontend\\src\\components\\clients\\ClientTable.js",[],"C:\\Users\\odiak\\Documents\\PROJETS\\crud-api-spring-boot\\frontend\\src\\components\\clients\\ClientFormDialog.js",["162"],"import React, { useEffect, useState } from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport \"date-fns\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardDatePicker,\r\n} from \"@material-ui/pickers\";\r\n\r\nexport default function ClientFormDialog(props) {\r\n  const [selectedDate, setSelectedDate] = useState(\r\n    new Date(\"2014-08-18T21:11:54\")\r\n  );\r\n  const [client, setClient] = useState(\r\n    props.client || {\r\n      prenom: \"\",\r\n      nom: \"\",\r\n      dateNaissance: \"\",\r\n    }\r\n  );\r\n\r\n  useEffect(() => {\r\n    setClient({\r\n      ...client,\r\n      dateNaissance: selectedDate.toISOString().split(\"T\")[0],\r\n    });\r\n  }, []);\r\n\r\n  const handleDateChange = (date) => {\r\n    try {\r\n      setSelectedDate(date);\r\n      setClient({\r\n        ...client,\r\n        dateNaissance: date.toISOString().split(\"T\")[0],\r\n      });\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n  return (\r\n    <Dialog\r\n      open={props.open}\r\n      onClose={(event, reason) => props.handleClose(event, reason, client)}\r\n      aria-labelledby=\"form-dialog-title\"\r\n    >\r\n      <DialogTitle id=\"form-dialog-title\">{props.currentPage}</DialogTitle>\r\n      <DialogContent>\r\n        <TextField\r\n          autoFocus\r\n          required\r\n          id=\"prenom\"\r\n          label=\"Prénom\"\r\n          type=\"text\"\r\n          value={client.prenom}\r\n          onChange={(e) => setClient({ ...client, prenom: e.target.value })}\r\n          color=\"secondary\"\r\n          fullWidth\r\n        />\r\n        <TextField\r\n          required\r\n          id=\"nom\"\r\n          label=\"Nom\"\r\n          type=\"text\"\r\n          value={client.nom}\r\n          onChange={(e) => setClient({ ...client, nom: e.target.value })}\r\n          fullWidth\r\n          color=\"secondary\"\r\n        />\r\n\r\n        <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n          <KeyboardDatePicker\r\n            margin=\"normal\"\r\n            id=\"date-picker-dialog\"\r\n            label=\"Date de naissance\"\r\n            format=\"MM/dd/yyyy\"\r\n            value={selectedDate}\r\n            onChange={handleDateChange}\r\n            // DialogProps={{\r\n            //   // fullScreen:true,\r\n            //   // fullWidth:true\r\n            // }}\r\n            // onClose={}\r\n            fullWidth\r\n            KeyboardButtonProps={{\r\n              \"aria-label\": \"change date\",\r\n            }}\r\n          />\r\n        </MuiPickersUtilsProvider>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button\r\n          onClick={(event, reason) => props.handleClose(event, reason, client)}\r\n          color=\"primary\"\r\n        >\r\n          Annuler\r\n        </Button>\r\n        <Button\r\n          onClick={(event, reason) => {\r\n            if (client.prenom === \"\" || client.nom === \"\") {\r\n\r\n              return;\r\n            }\r\n            props.handleClose(event, reason, client);\r\n          }}\r\n          color=\"secondary\"\r\n        >\r\n          Enregistrer\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n}\r\n","C:\\Users\\odiak\\Documents\\PROJETS\\crud-api-spring-boot\\frontend\\src\\components\\clients\\ClientRow.js",[],"C:\\Users\\odiak\\Documents\\PROJETS\\crud-api-spring-boot\\frontend\\src\\components\\common\\DatePickerDialog.js",[],"C:\\Users\\odiak\\Documents\\PROJETS\\crud-api-spring-boot\\frontend\\src\\components\\common\\VerticalTabs.js",[],"C:\\Users\\odiak\\Documents\\PROJETS\\crud-api-spring-boot\\frontend\\src\\components\\common\\Navbar.js",[],"C:\\Users\\odiak\\Documents\\PROJETS\\crud-api-spring-boot\\frontend\\src\\components\\common\\BottomNavbar.js",[],"C:\\Users\\odiak\\Documents\\PROJETS\\crud-api-spring-boot\\frontend\\src\\components\\compte\\Compte.js",["163","164","165","166","167"],"import React, { useContext, useState } from \"react\";\r\nimport CompteTable from \"./CompteTable\";\r\nimport CompteFormDialog from \"./CompteFormDialog\";\r\nimport { AddCircle } from \"@material-ui/icons\";\r\nimport { Button, Grid, makeStyles } from \"@material-ui/core\";\r\nimport { GlobalContext } from \"../../contexts/GlobalState\";\r\nimport SuccessSnackbar from \"../common/SuccessSnackbar\";\r\nimport { CompteContext } from \"../../contexts/CompteState\";\r\nimport { ConfirmationDialog } from \"../common/ConfirmationDialog\";\r\nimport FullScreenDialog from \"../common/FullScreenDialog\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  addButtonGrid: {\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nfunction Compte() {\r\n  const classes = useStyles();\r\n\r\n\r\n  const { createCompte } = useContext(CompteContext);\r\n  const { compteDialog, openCompteDialog, openSnackbar } = useContext(GlobalContext);\r\n\r\n  const closeCompteDialog = (event, reason, idAgence, idClient, compte) => {\r\n    if (event.target.innerText.toLowerCase() === \"enregistrer\") {\r\n      createCompte(idAgence, idClient, compte);\r\n      openSnackbar(\"Compte ajouté avec succés!\", \"success\");\r\n      // console.log(compte)\r\n    }\r\n  };\r\n  return (\r\n    <div>\r\n      <Grid container justify=\"center\">\r\n        <Grid item xs={7} className={classes.addButtonGrid}>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            startIcon={<AddCircle />}\r\n            onClick={() => openCompteDialog({})}\r\n            size=\"small\"\r\n            // className={classes.addButton}\r\n          >\r\n            Ajouter Compte\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n      <Grid container justify=\"center\" alignItems=\"center\">\r\n        <Grid item xs={7}>\r\n          <CompteTable />\r\n        </Grid>\r\n      </Grid>\r\n      <CompteFormDialog\r\n        open={compteDialog.open}\r\n        // handleClose={closeCompteDialog}\r\n        currentPage=\"Ajouter un nouveau compte\"\r\n      />\r\n      {/* <SuccessSnackbar /> */}\r\n\r\n      {/* <ConfirmationDialog\r\n        open={confirmationDialogOpen}\r\n        handleClickOpen={openConfirmationDialog}\r\n        handleClose={closeConfirmationDialog}\r\n        actionTitle=\"Supprimer Compte\"\r\n        actionLabel=\"supprimer le compte\"\r\n      />\r\n      <FullScreenDialog\r\n        open={open}\r\n        dialogDetail={dialogDetail}\r\n        handleClose={handleClose}\r\n      /> */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Compte;\r\n","C:\\Users\\odiak\\Documents\\PROJETS\\crud-api-spring-boot\\frontend\\src\\components\\compte\\CompteTable.js",[],"C:\\Users\\odiak\\Documents\\PROJETS\\crud-api-spring-boot\\frontend\\src\\components\\compte\\CompteFormDialog.js",["168","169"],"import React, { useContext, useEffect, useState } from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport { ClientContext } from \"../../contexts/ClientState\";\r\nimport { AgenceContext } from \"../../contexts/AgenceState\";\r\nimport { GlobalContext } from \"../../contexts/GlobalState\";\r\n\r\nexport default function CompteFormDialog(props) {\r\n  const { clients } = useContext(ClientContext);\r\n  const { agences } = useContext(AgenceContext);\r\n\r\n  const { compteDialog, openCompteDialog, closeCompteDialog } = useContext(\r\n    GlobalContext\r\n  );\r\n\r\n  const [compte, setCompte] = useState();\r\n\r\n  return (\r\n    <Dialog\r\n      open={compteDialog.open}\r\n      onClose={closeCompteDialog}\r\n      aria-labelledby=\"form-dialog-title\"\r\n    >\r\n      <DialogTitle id=\"form-dialog-title\">{props.currentPage}</DialogTitle>\r\n      <DialogContent>\r\n        <TextField\r\n          autoFocus\r\n          required\r\n          id=\"solde\"\r\n          label=\"Solde\"\r\n          type=\"number\"\r\n          value={compteDialog.compte?.solde || \"\"}\r\n          onChange={(e) => setCompte({ ...compte, solde: e.target.value })}\r\n          color=\"secondary\"\r\n          fullWidth\r\n        />\r\n        <TextField\r\n          required\r\n          id=\"decouvert\"\r\n          label=\"Découvert\"\r\n          type=\"number\"\r\n          value={compteDialog.compte?.decouvert || \"\"}\r\n          onChange={(e) => {\r\n            setCompte({ ...compte, decouvert: e.target.value });\r\n          }}\r\n          fullWidth\r\n          color=\"secondary\"\r\n        />\r\n\r\n        <FormControl fullWidth>\r\n          <InputLabel id=\"demo-simple-select-label\">Agence</InputLabel>\r\n          <Select\r\n            fullWidth\r\n            labelId=\"demo-simple-select-label\"\r\n            id=\"demo-simple-select\"\r\n            value={compteDialog.compte?.agence?.id || \"\"}\r\n            name=\"select-agence\"\r\n            onChange={async (e) => {\r\n              await setCompte({ ...compte, agence: e.target.value });\r\n              // console.log(props.compte);\r\n              // console.log(compte);\r\n              // console.log(e.target.value);\r\n            }}\r\n          >\r\n            {agences.map((agence) => (\r\n              <MenuItem key={agence.id} value={agence.id}>\r\n                {agence.nom}\r\n              </MenuItem>\r\n            ))}\r\n          </Select>\r\n        </FormControl>\r\n        \r\n        <FormControl fullWidth>\r\n          <InputLabel id=\"demo-simple-select-label\">Client</InputLabel>\r\n          <Select\r\n            fullWidth\r\n            labelId=\"demo-simple-select-label\"\r\n            id=\"demo-simple-select\"\r\n            value={compteDialog.compte?.client?.id || \"\"}\r\n            name=\"select-client\"\r\n            onChange={(e) => {\r\n              setCompte({ ...compte, client: e.target.value });\r\n              console.log(compte);\r\n              console.log(props.compte);\r\n              // console.log(e.target.value);\r\n            }}\r\n          >\r\n            {clients.map((client) => (\r\n              <MenuItem key={client.id} value={client.id}>\r\n                {`${client.prenom} ${client.nom}`}\r\n              </MenuItem>\r\n            ))}{\" \"}\r\n          </Select>\r\n        </FormControl>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={closeCompteDialog} color=\"primary\">\r\n          Annuler\r\n        </Button>\r\n        <Button\r\n          onClick={(event, reason) => {\r\n            if (compte.solde === \"\" || compte.decouvert === \"\") {\r\n              return;\r\n            }\r\n\r\n            console.log(\"FROM DIALOG CLICK\", compte);\r\n          }}\r\n          color=\"secondary\"\r\n        >\r\n          Enregistrer\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n}\r\n","C:\\Users\\odiak\\Documents\\PROJETS\\crud-api-spring-boot\\frontend\\src\\components\\compte\\CompteRow.js",["170","171","172","173","174","175"],"import React, { useContext, useEffect, useReducer } from \"react\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport { IconButton, Link, Tooltip } from \"@material-ui/core\";\r\nimport { Delete, Edit } from \"@material-ui/icons\";\r\nimport { GlobalContext } from \"../../contexts/GlobalState\";\r\nimport { compteService } from \"../../services/CompteService\";\r\nimport { CompteContext } from \"../../contexts/CompteState\";\r\n\r\nexport default function CompteRow(props) {\r\n  const { compteDiaglog, openCompteDialog, closeCompteDialog } = useContext(\r\n    GlobalContext\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <TableRow key={props.compte.id} hover>\r\n        <TableCell component=\"th\" scope=\"compte\">\r\n          {props.compte.id}\r\n        </TableCell>\r\n        <TableCell align=\"left\">{props.compte.solde}</TableCell>\r\n        <TableCell align=\"left\">{props.compte.decouvert}</TableCell>\r\n\r\n        <TableCell align=\"left\">\r\n          <Tooltip title=\"Cliquer pour ouvrir les détails de l'agence\">\r\n            <Link\r\n              onClick={\r\n                (event) => {}\r\n                // handleClickOpen(\"agences\", props.compte.agence, event)\r\n              }\r\n            >\r\n              {props.compte.agence.nom}{\" \"}\r\n            </Link>\r\n          </Tooltip>\r\n        </TableCell>\r\n        <TableCell align=\"left\">\r\n          <Tooltip title=\"Cliquer pour ouvrir les détails du client\">\r\n            <Link\r\n              onClick={\r\n                (event) => {}\r\n                // handleClickOpen(\"clients\", props.compte.client, event)\r\n              }\r\n            >\r\n              {`${props.compte.client.prenom} ${props.compte.client.nom}`}{\" \"}\r\n            </Link>\r\n          </Tooltip>\r\n        </TableCell>\r\n        <TableCell align=\"center\">\r\n          <Tooltip title=\"Modifier\">\r\n            <IconButton\r\n              variant=\"outlined\"\r\n              color=\"secondary\"\r\n              onClick={(event) => openCompteDialog(props.compte)}\r\n              size=\"small\"\r\n            >\r\n              <Edit />\r\n            </IconButton>\r\n          </Tooltip>\r\n        </TableCell>\r\n        <TableCell align=\"center\">\r\n          <Tooltip title=\"Supprimer\">\r\n            <IconButton\r\n              variant=\"outlined\"\r\n              color=\"primary\"\r\n              // onClick={openConfirmationDialog}\r\n              size=\"small\"\r\n            >\r\n              <Delete />\r\n            </IconButton>\r\n          </Tooltip>\r\n        </TableCell>\r\n      </TableRow>\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\odiak\\Documents\\PROJETS\\crud-api-spring-boot\\frontend\\src\\contexts\\CompteReducer.js",[],"C:\\Users\\odiak\\Documents\\PROJETS\\crud-api-spring-boot\\frontend\\src\\services\\CompteService.js",[],"C:\\Users\\odiak\\Documents\\PROJETS\\crud-api-spring-boot\\frontend\\src\\components\\common\\FullScreenDialog.js",[],"C:\\Users\\odiak\\Documents\\PROJETS\\crud-api-spring-boot\\frontend\\src\\contexts\\AgenceState.js",[],"C:\\Users\\odiak\\Documents\\PROJETS\\crud-api-spring-boot\\frontend\\src\\contexts\\ClientState.js",[],"C:\\Users\\odiak\\Documents\\PROJETS\\crud-api-spring-boot\\frontend\\src\\contexts\\CompteState.js",[],"C:\\Users\\odiak\\Documents\\PROJETS\\crud-api-spring-boot\\frontend\\src\\contexts\\CommonReducers.js",[],{"ruleId":"176","replacedBy":"177"},{"ruleId":"178","replacedBy":"179"},{"ruleId":"176","replacedBy":"180"},{"ruleId":"178","replacedBy":"181"},{"ruleId":"176","replacedBy":"182"},{"ruleId":"178","replacedBy":"183"},{"ruleId":"176","replacedBy":"184"},{"ruleId":"178","replacedBy":"185"},{"ruleId":"186","severity":1,"message":"187","line":32,"column":6,"nodeType":"188","endLine":32,"endColumn":8,"suggestions":"189"},{"ruleId":"190","severity":1,"message":"191","line":1,"column":29,"nodeType":"192","messageId":"193","endLine":1,"endColumn":37},{"ruleId":"190","severity":1,"message":"194","line":7,"column":8,"nodeType":"192","messageId":"193","endLine":7,"endColumn":23},{"ruleId":"190","severity":1,"message":"195","line":9,"column":10,"nodeType":"192","messageId":"193","endLine":9,"endColumn":28},{"ruleId":"190","severity":1,"message":"196","line":10,"column":8,"nodeType":"192","messageId":"193","endLine":10,"endColumn":24},{"ruleId":"190","severity":1,"message":"197","line":25,"column":9,"nodeType":"192","messageId":"193","endLine":25,"endColumn":26},{"ruleId":"190","severity":1,"message":"198","line":1,"column":29,"nodeType":"192","messageId":"193","endLine":1,"endColumn":38},{"ruleId":"190","severity":1,"message":"199","line":20,"column":25,"nodeType":"192","messageId":"193","endLine":20,"endColumn":41},{"ruleId":"190","severity":1,"message":"198","line":1,"column":29,"nodeType":"192","messageId":"193","endLine":1,"endColumn":38},{"ruleId":"190","severity":1,"message":"200","line":1,"column":40,"nodeType":"192","messageId":"193","endLine":1,"endColumn":50},{"ruleId":"190","severity":1,"message":"201","line":7,"column":10,"nodeType":"192","messageId":"193","endLine":7,"endColumn":23},{"ruleId":"190","severity":1,"message":"202","line":8,"column":10,"nodeType":"192","messageId":"193","endLine":8,"endColumn":23},{"ruleId":"190","severity":1,"message":"203","line":11,"column":11,"nodeType":"192","messageId":"193","endLine":11,"endColumn":24},{"ruleId":"190","severity":1,"message":"197","line":11,"column":44,"nodeType":"192","messageId":"193","endLine":11,"endColumn":61},"no-native-reassign",["204"],"no-negated-in-lhs",["205"],["204"],["205"],["204"],["205"],["204"],["205"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'client' and 'selectedDate'. Either include them or remove the dependency array. You can also do a functional update 'setClient(c => ...)' if you only need 'client' in the 'setClient' call.","ArrayExpression",["206"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'SuccessSnackbar' is defined but never used.","'ConfirmationDialog' is defined but never used.","'FullScreenDialog' is defined but never used.","'closeCompteDialog' is assigned a value but never used.","'useEffect' is defined but never used.","'openCompteDialog' is assigned a value but never used.","'useReducer' is defined but never used.","'compteService' is defined but never used.","'CompteContext' is defined but never used.","'compteDiaglog' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"207","fix":"208"},"Update the dependencies array to be: [client, selectedDate]",{"range":"209","text":"210"},[968,970],"[client, selectedDate]"]